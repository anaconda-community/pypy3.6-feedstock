# HG changeset patch
# Date 1645737549 18000
#      Thu Feb 24 16:19:09 2022 -0500
# Branch py3.9
# Node ID cc4af835949c89232e380a11234a71fdac9dfe8c
# Parent  08a985f5673c25b2e4cd9f8b91131916cc9d1948
fix LDLIBRARY (issue 3689)

diff -r 08a985f5673c -r cc4af835949c lib_pypy/_sysconfigdata.py
--- a/lib_pypy/_sysconfigdata.py
+++ b/lib_pypy/_sysconfigdata.py
@@ -37,19 +37,19 @@
     'SIZEOF_VOID_P': struct.calcsize("P"),
 }
 
-# LIBDIR should point to where the libpypy3-c.so file lives, on CPython
+# LIBDIR should point to where the libpypy3.9-c.so file lives, on CPython
 # it points to "mybase/lib". But that would require rethinking the PyPy
-# packaging process which copies pypy3 and libpypy3-c.so to the
+# packaging process which copies pypy3 and libpypy3.9-c.so to the
 # "mybase/bin" directory. Only when making a portable build (the default
 # for the linux buildbots) is there even a "mybase/lib" created, even so
 # the mybase/bin layout is left untouched.
 mybase = sys.base_prefix
 if sys.platform == 'win32':
-    build_time_vars['LDLIBRARY'] = 'libpypy3-c.dll'
+    build_time_vars['LDLIBRARY'] = 'libpypy3.9-c.dll'
     build_time_vars['INCLUDEPY'] = os.path.join(mybase, 'include')
     build_time_vars['LIBDIR'] = mybase
 else:
-    build_time_vars['LDLIBRARY'] = 'libpypy3-c.so'
+    build_time_vars['LDLIBRARY'] = 'libpypy3.9-c.so'
     build_time_vars['INCLUDEPY'] = os.path.join(mybase, 'include', 'pypy' + pydot)
     build_time_vars['LIBDIR'] = os.path.join(mybase, 'bin')
     # try paths relative to sys.base_prefix first
@@ -85,7 +85,7 @@
     build_time_vars['CC'] += ' -arch %s' % (arch,)
     build_time_vars["LDFLAGS"] = "-undefined dynamic_lookup"
     build_time_vars["LDSHARED"] = build_time_vars['CC'] + " -shared " + build_time_vars["LDFLAGS"]
-    build_time_vars['LDLIBRARY'] = 'libpypy3-c.dylib'
+    build_time_vars['LDLIBRARY'] = 'libpypy3.9-c.dylib'
     # scikit-build checks this, it is left over from the NextStep rld linker
     build_time_vars['WITH_DYLD'] = 1
     if "CXX" in build_time_vars:

